.main {
  max-width: 1100px;
  padding-left: 30px;
  padding-right: 30px;

  margin-top: 140px;
  margin-bottom: 100px;
  

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.page-title {
  font-weight: 700;
  font-size: 22px;
  margin-bottom: 18px;
}

.checkout-grid {
  display: grid;
  /* Here, 1fr means the first column will take
     up the remaining space in the grid. */
  grid-template-columns: 1fr 350px;
  column-gap: 12px;

  /* Use align-items: start; to prevent the elements
     in the grid from stretching vertically. */
  align-items: start;
}

@media (max-width: 1000px) {
  .main {
    max-width: 500px;
  }

  body{
    background-color:rgb(225,225 ,225 );
    background-color: green;
    overflow-y: auto;
  }

  .checkout-grid {
    grid-template-columns: 1fr;
  }
}

.cart-item-container,
.payment-summary {
  border: 1px solid rgb(222, 222, 222);
  border-radius: 4px;
  padding: 18px;
}

.cart-item-container {
  margin-bottom: 12px;
  max-height: 350px; /* Change max-height to min-height */
  overflow-y: auto;
}



.payment-summary {
  padding-bottom: 5px;
}

@media (max-width: 1000px) {
  .payment-summary {
    /* grid-row: 1 means this element will be placed into row
      1 in the grid. (Normally, the row that an element is
      placed in is determined by the order of the elements in
      the HTML. grid-row overrides this default ordering). */
    grid-row: 1;
    margin-bottom: 12px;
  }
}

.delivery-date {
  color: rgb(0, 118, 0);
  font-weight: 700;
  font-size: 19px;
  margin-top: 5px;
  margin-bottom: 22px;
}

.cart-item-details-grid {
  display: grid;
  /* 100px 1fr 1fr; means the 2nd and 3rd column will
     take up half the remaining space in the grid
     (they will divide up the remaining space evenly). */
  grid-template-columns: 100px 1fr 1fr;
  column-gap: 25px;
}

@media (max-width: 1000px) {
  .cart-item-details-grid {
    grid-template-columns: 100px 1fr;
    row-gap: 30px;
  }
}

.product-image {
  max-width: 100%;
  max-height: 120px;

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.product-name {
  font-weight: 700;
  margin-bottom: 8px;
}

.product-price {
  color: rgb(177, 39, 4);
  font-weight: 700;
  margin-bottom: 5px;
}

.product-quantity .link-primary {
  margin-left: 3px;
}

@media (max-width: 1000px) {
  .delivery-options {
    /* grid-column: 1 means this element will be placed
       in column 1 in the grid. (Normally, the column that
       an element is placed in is determined by the order
       of the elements in the HTML. grid-column overrides
       this default ordering).
       
       / span 2 means this element will take up 2 columns
       in the grid (Normally, each element takes up 1
       column in the grid). */
    grid-column: 1 / span 2;
  }
}

.delivery-options-title {
  font-weight: 700;
  margin-bottom: 10px;
}

.delivery-option {
  display: grid;
  grid-template-columns: 24px 1fr;
  margin-bottom: 12px;
  cursor: pointer;
}

.delivery-option-input {
  margin-left: 0px;
  cursor: pointer;
}

.delivery-option-date {
  color: rgb(0, 118, 0);
  font-weight: 500;
  margin-bottom: 3px;
}

.delivery-option-price {
  color: rgb(120, 120, 120);
  font-size: 15px;
}

.payment-summary-title {
  font-weight: 700;
  font-size: 18px;
  margin-bottom: 12px;
}

.payment-summary-row {
  display: grid;
  /* 1fr auto; means the width of the 2nd column will be
     determined by the elements inside the column (auto).
     The 1st column will take up the remaining space. */
  grid-template-columns: 1fr auto;

  font-size: 15px;
  margin-bottom: 9px;
}

.payment-summary-money {
  text-align: right;
}

.subtotal-row .payment-summary-money {
  border-top: 1px solid rgb(222, 222, 222);
}

.subtotal-row div {
  padding-top: 9px;
}

.total-row {
  color: rgb(177, 39, 4);
  font-weight: 700;
  font-size: 18px;

  border-top: 1px solid rgb(222, 222, 222);
  padding-top: 18px;
}

.place-order-button {
  width: 100%;
  padding-top: 12px;
  padding-bottom: 12px;
  border-radius: 8px;

  margin-top: 11px;
  margin-bottom: 15px;
}

.dialog {
  position: fixed;
  right: 50%;
  top: 50%;
  /* Remove borders and background color */
  border: none;
  background-color: transparent; 
  background-size: cover;
  background-repeat: no-repeat;

  width: 400px; /* Adjust width as needed */
  animation: pulsate 1s ease-in-out infinite alternate;
  display: flex; /* Enable flexbox */
  flex-direction: column; /* Stack elements vertically */
  height: 250px; /* Set a height for the dialog (adjust as needed) */
}

.notFound {
  /* Adjust positioning and size based on your image */
  margin: 0 auto; /* Maintain horizontal centering */
  width: 100px; /* Adjust width as needed */
  height: 100px; /* Adjust height as needed */
  border-radius: 50%; 
  position: relative; /* Enable relative positioning */
  bottom: 20px; /* Position at the bottom with an offset (adjust) */
}

.notFoundImage {
  /* Adjust image size and positioning to fit within .notFound */
  width: 100%; /* Match width of .notFound */
  height: 100%; /* Match height of .notFound */
}

.dialog h3,
.dialog h5 {
  /* Adjust styles for headings (optional) */
  text-align: center; /* Center text horizontally */
}
@keyframes pulsate {
  from { transform: scale(1.5); }
  to { transform: scale(1.1); }
}
body{
  background-color:rgb(225,225 ,225 );
  overflow: hidden;
}

@import url("https://fonts.googleapis.com/css?family=Rajdhani:300&display=swap");
body, html {
  height: 100%;
  margin: 0;
  padding: 0;
  background-color: rgb(255, 252, 245);
}

body{
  display: flex;
  justify-content: center;
  align-items: center;
  background-size: cover;
  background-position: center;
  font-family: "Rajdhani", sans-serif;
   min-height: 720px;
}

*, *:before, *:after {
  box-sizing: border-box;
}

.glass {
  height: 100%;
  width: 100%;
  background-image: url("../../../../HTMLCSSREVIEW/assets/background.jpeg");
  background-size: cover;
  background-position: center;
  -webkit-clip-path: inset(10em);
          clip-path: inset(10em);
  filter: blur(20px);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.drop-shadow {
  position: fixed;
  height: 100%;
  width: 100%;
  filter: drop-shadow(0px 20px 10px rgba(0, 0, 0, 0.3));
  display: flex;
  justify-content: center;
  align-items: center;
  /* animation: pulsate 1s ease-in-out infinite alternate; */
}
.drop-shadow:before {
  display: block;
  content: "";
  position: absolute;
  top: 10em;
  height: calc(100% - 20em);
  width: calc(100% - 20em);
  border-top: 2px solid rgba(225, 225, 225, 0.2);
  border-left: 1px solid rgba(225, 225, 225, 0.1);
  border-right: 1px solid rgba(225, 225, 225, 0.3);
  z-index: 2;
}
.drop-shadow > span {
  position: absolute;
  z-index: 5;
  color: white;
  font-size: 4em;
  letter-spacing: 0.75em;
  padding-left: 0.375em;
}

@media (min-width: 1280px) {
  .glass {
    -webkit-clip-path: inset(5em);
            clip-path: inset(5em);
  }

  .drop-shadow:before {
    top: 5em;
    width: calc(100% - 10em);
  }
  .drop-shadow > span {
    font-size: 4em;
  }
  .main-after {
    visibility:hidden;
  }
}
@media (max-width: 1279px) {
  .glass {
    -webkit-clip-path: inset(5em);
            clip-path: inset(5em);
  }

  .drop-shadow:before {
    top: 5em;
    width: calc(100% - 10em);
  }
  .drop-shadow > span {
    font-size: 4em;
  }
  .main-after {
    visibility:hidden;
  }
}
@media (max-width: 640px) {
  .drop-shadow > span {
    font-size: 2em;
  }
}
.bullshit{
  position: fixed;
  right: 42%;
  top: 60%;
  font-family: Lucida Handwriting;
}
@font-face {
  font-family: 'Rocher';
  src: url(https://assets.codepen.io/9632/RocherColorGX.woff2);
}
@font-palette-values --Grays {
  font-family: Rocher;
  base-palette: 7;
}
.errorMessage{
  position: fixed;
  right: 37%;
  top: 35%;
  font-family: 'Rocher';
  font-palette: --Grays;
  border-color: aqua;
}
@media (max-width: 820px) {
  .errorMessage{
    position: fixed;
    right: 37%;
    top: 40%;
    font-family: 'Courier New', Courier, monospace;
    font-size: medium;
    border-color: aqua;
  }
  .redirect {
    position: fixed;
    right: 38%;
    display: inline-block; 
    font-size: small;
  }
}
@media (max-width: 820px) {
  .errorMessage{
    font-size: small;
  }
  .redirect {
    font-size:smaller;
  }
}
@media (max-width: 430px) {
  .errorMessage{
    font-size: 10px;
  }
  .redirect {
    font-size:10px;
  }
}
@media (max-width: 360px) {
  .errorMessage{
    font-size: 8px;
  }
  .redirect {
    font-size:8px;
  }
}
.remove-background{
  background-color: rgba(0,0,0, 0.4);
}

.redirect {
  display: inline-block; /* Allow inline behavior for the h4 */
}

.ellipsis {
  /* Initial styles for the ellipsis */
  color: black; /* Initially invisible */
  font-size: 1.2em; /* Adjust font size for better visibility */
}
@keyframes pulsates{
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 0; }
}

.ellipsis:nth-child(1) {
  animation: pulsates 1s ease-in-out infinite alternate;
  animation-delay: 0s; /* Start immediately */
}

.ellipsis:nth-child(2) {
  animation: pulsates 1s ease-in-out infinite alternate;
  animation-delay: 0.2s; 
}

.ellipsis:nth-child(3) {
  animation: pulsates 1s ease-in-out infinite alternate;
  animation-delay: 0.4s; 
}

.hidden{
  display:none;
}

.quantity-input{
  width:40px;
}

.popup-message{
  position: fixed;
  justify-content: center;
  right: 40%;
  top: 20%;
  z-index: 1000;
  background-color: aliceblue;
  width: 300px;
  height: 150px;
}
.popup-title, .close-popup{
  font-family: 'Rocher';
  font-palette: --reds;
  border-color: aqua;
  display:block;
  text-align: center;
  background-color:aqua;
}
.close-popup{
  background-color: red;
  position: absolute;
  top: 0px;
  right: 2px;
  font-size: 16px;
  cursor: pointer;
}
.ok-popup{
  background-color: aliceblue;
  color: green;
  font-family: 'Rocher';
  background-color:darkturquoise;
  position: absolute;
  bottom: 10%;
  right: 40%;
}
.popup-body{
  background-color: aliceblue;
  color:red;
  position: absolute;
  bottom: 50%;
  right: 2px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999; 
}

.error-message-update{
  color: red;
  border-color: blue;
  border: 1px solid red;
  padding: 1px;
  border-style: double;
}



